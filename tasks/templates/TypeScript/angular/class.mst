export class {{{apiConfig.className}}} {
  public title = '{{{api.info.title}}}';
  public version = '{{{api.info.version}}}';
  private $http: ng.IHttpService;

  constructor($http: ng.IHttpService){
    this.$http = $http;
  }

  private createRequestConfig(path: string, method: string, parameters?: any): ng.IRequestConfig {
    var config: ng.IRequestConfig = {
      method: method,
      url: path
    };

    if (parameters) {
	  var query: string;

      for (var paramName in parameters) {
        var parameter = parameters[paramName];

        if (parameter.type === 'body') {
		  config.data = parameter.value;
        }

		if (parameter.type === 'path') {
		  config.url = config.url.replace('{' + paramName + '}', parameter.value);
        }

		//Add query parameters only if the value is defined
        if (parameter.type === 'query' && angular.isDefined(parameter.value) && parameter.value !== null) {
          if (angular.isDefined(query)) {
            query += '&';
          }
          else {
            query = '?';
          }

          query += paramName + '=' + parameter.value;
        }
      }

	  if (angular.isDefined(query)) {
	    config.url += query;
	  }
    }

    return config;
  }
  {{#methodContent}}

    {{{methodContent}}}
  {{/methodContent}}
}
